on:
  push:
    branches:
      - integ-tests

name: Integration Test

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Print current build ID
      run: |
        echo Integration test run: githubactionsamazonecrlogin-Wwf7ijrjMZH6:802de4b9-c495-4fbb-95b8-073c48db650f

    - name: Configure AWS credentials
      id: configure-aws-credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@bd422ee79aa9d476b849d822a8a7b0be3271ed9a

    - name: Tag and push an image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: github-actions-amazon-ecr-login-integ-tests
        IMAGE_TAG: latest
      run: |
        docker pull amazonlinux
        docker tag amazonlinux $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Login to Amazon ECR using explicit registry ID
      uses: aws-actions/amazon-ecr-login@bd422ee79aa9d476b849d822a8a7b0be3271ed9a
      with:
        registries: ${{ steps.configure-aws-credentials.outputs.aws-account-id }}

    - name: Logout of Amazon ECR
      if: always()
      run: docker logout ${{ steps.login-ecr.outputs.registry }}